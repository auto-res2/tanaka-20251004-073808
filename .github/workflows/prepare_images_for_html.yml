name: Prepare Images for HTML

on:
  workflow_dispatch:
    inputs:
      selected_branches:
          description: 'Branches to fetch images from (JSON array format)'
          required: true

jobs:
  convert-and-upload:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout current branch
        uses: actions/checkout@v4
        with:
          ref: "gh-pages"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install PDF to PNG tools
        run: |
          sudo apt-get update
          sudo apt-get install -y poppler-utils

      - name: Fetch PDFs from selected branches
        run: |
          mkdir -p output_images
          readarray -t branches < <(echo '${{ github.event.inputs.selected_branches }}' | jq -r '.[]')

          for branch in "${branches[@]}"; do
            echo "Processing branch: $branch"

            tmp_dir="$(mktemp -d)"
            git fetch origin $branch
            git --work-tree="$tmp_dir" checkout origin/$branch -- .research/ || true

            latest=$(ls "$tmp_dir/.research" | grep '^iteration[0-9]\+$' | sed 's/iteration//' | sort -n | tail -n1)
            if [ -n "$latest" ]; then
              img_dir="$tmp_dir/.research/iteration${latest}/images"

              if [ -d "$img_dir" ]; then
                for pdf in "$img_dir"/*.pdf; do
                  [ -e "$pdf" ] || continue
                  name=$(basename "$pdf" .pdf)
                  pdftoppm "$pdf" "output_images/${name}" -png
                done
              else
                echo "No images found in $branch"
              fi
            else
              echo "No iteration directories in $branch"
            fi

            rm -rf "$tmp_dir"
          done

          for png in output_images/*-1.png; do
            base=$(basename "$png" -1.png)
            mv "$png" "output_images/${base}.png"
          done

      - name: Copy converted PNGs to gh-pages branch
        run: |
          target_dir="branches/${{ github.ref_name }}/images"
          mkdir -p "$target_dir"
          cp output_images/*.png "$target_dir"

      - name: Commit and push to gh-pages
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add branches/
          git commit -m "Upload PNGs from ${{ github.ref_name }}"
          git push origin gh-pages